name: Index and Build Obsidious
description: Index the repository, clone `nicholaswagner/obsidious`, and build
permissions:
    contents: write
on:
    push:
        branches:
            - main

jobs:
    build_repository_index:
        runs-on: ubuntu-latest

        steps:
            # Checkout the current repository (example-vault) which has markdown files / images etc
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                path: main
    
            - name: Disable Jekyll on GitHub Pages
              working-directory: ${{ github.workspace }}/main
              run: touch .nojekyll

            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                repository: nicholaswagner/obsidious
                path: obsidious

            # Run the indexer in your current repository
            - name: Run Obsidious Indexer
              working-directory: ${{ github.workspace }}
              run: npm exec remark-obsidious@latest --yes -- --in ${{ github.workspace }}/main --out ${{ github.workspace }}/obsidious/src/assets
            # Install dependencies for obsidious
            - name: Install dependencies for obsidious
              working-directory: ${{ github.workspace }}/obsidious
              run: npm ci
            # Build the obsidious app
            - name: Build Obsidious app
              env:
                  VITE_BASE_URL: /warforthecrown/
                  VITE_FILEPATH_PREFIX: ./
                  VITE_INITIAL_VAULT_FILE_LABEL_SLUG: readme
              working-directory: ${{ github.workspace }}/obsidious
              run: npm run build
            # Copy built files to the main repository
            - name: Copy built site to workspace root
              working-directory: ${{ github.workspace }}
              run: cp -r ${{ github.workspace }}/obsidious/dist/* ${{ github.workspace }}/main
            # Configure GitHub Pages
            - name: Setup Pages
              uses: actions/configure-pages@v3
            # Upload the built site as an artifact for GitHub Pages
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v2
              with:
                path: ${{ github.workspace }}/main  # Path to your built site
            # Deploy to GitHub Pages
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v2






              # Set up Git for GitHub Pages deployment
            # - name: Set up Git for GitHub Pages deployment
            #   working-directory: ${{ github.workspace }}/main
            #   run: |
            #       git config --global user.name "GitHub Actions"
            #       git config --global user.email "actions@github.com"
            #       git checkout --orphan gh-pages  # Create a new orphan branch for GitHub Pages
            # # Commit and push to GitHub Pages
            # - name: Commit and push to GitHub Pages
            #   working-directory: ${{ github.workspace }}/main
            #   run: |
            #       git add -A  # Add all the files from the dist/
            #       git commit -m "Deploy site to GitHub Pages"
            #       git push --force --set-upstream origin gh-pages  # Force push to the gh-pages branch